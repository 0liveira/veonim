import { sub } from './neovim-client'
const action = sub('action')
// TODO: no typings yet :(
//  https://github.com/hyperapp/hyperapp/pull/311
const { h, app } = require('hyperapp')

// this is a global-singleton -> will live outside of here
const registerPlugin = (name: string) => {
  const exist = document.getElementById(name)
  if (exist) document.body.removeChild(exist)

  const fresh = document.createElement(name)
  fresh.setAttribute('class', 'plugin')
  document.body.appendChild(fresh)

  return {
    el: fresh,
    activate: () => fresh.style.display = 'block',
    deactivate: () => fresh.style.display = 'none'
  }
}


// require-reload module will refresh this code
// this will get recreated and reloaded on plugin refresh. then it will grab new element from registerPlugin method (or should it reuse element?)
// state will get regenerated by plugin code (aka from vim api or vim instance data)
const state = 0

const view = (state: any, actions: any) => h('div', null, [
  h('h1', state),
  h('button', { onclick: actions.add }, '+'),
  h('button', { onclick: actions.sub }, '-')
])

const actions = {
  add: (s: any) => s + 1,
  sub: (s: any) => s - 1
}

const emit = app({ state, view, actions, root: registerPlugin('files') })
console.log(emit)

action('files', () => {
  console.log('GET FILES SON')
})

action('buffers', () => {
  console.log('get me dat bufferz')
})
